{"version":3,"sources":["components/Formulario.js","components/Tareas.js","components/ListaTareas.js","App.js","index.js"],"names":["Formulario","props","useState","editar","value","input","setInput","onSubmit","e","preventDefault","id","Math","floor","random","text","onChange","target","Tareas","tareas","eliminarTarea","setActualizadoTarea","tareaCompletada","setEditar","map","tarea","index","className","estaCompleta","onClick","ListaTareas","setTareas","info","test","LasTareas","actualizarComp","tareasActualizado","filter","tareaId","nuevoValor","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAuBeA,MArBf,SAAoBC,GAClB,MAA0BC,mBAASD,EAAME,OAASF,EAAME,OAAOC,MAAQ,IAAvE,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,uBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACFR,EAAMM,SAAS,CACbG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMT,IAERC,EAAS,KAGT,UACE,uBAAOS,SAbU,SAACP,GACpBF,EAASE,EAAEQ,OAAOZ,QAYeA,MAAOC,IACtC,iD,eC2BSY,MAxCf,YAKI,IAJFC,EAIC,EAJDA,OACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,oBACAC,EACC,EADDA,gBAEA,EAA4BnB,mBAAS,CACnCQ,GAAI,KACJN,MAAO,KAFT,mBAAOD,EAAP,KAAemB,EAAf,KAWA,OAAInB,EAAOO,GACF,cAAC,EAAD,CAAYP,OAAQA,EAAQI,SARb,SAACH,GACvBgB,EAAoBjB,EAAOO,GAAIN,GAC/BkB,EAAU,CACRZ,GAAI,KACJN,MAAO,QAMJc,EAAOK,KAAI,SAACC,EAAOC,GAAR,OAChB,sBAAKC,UAAWF,EAAMG,aAAe,WAAa,GAAlD,UACE,qBAAoBC,QAAS,kBAAMP,EAAgBG,EAAMd,KAAzD,SACGc,EAAMV,MADCU,EAAMd,IAGhB,gCACE,cAAC,IAAD,CAAiBkB,QAAS,kBAAMT,EAAcK,EAAMd,OACpD,cAAC,IAAD,CACEkB,QAAS,kBACPN,EAAU,CACRZ,GAAIc,EAAMd,GACVN,MAAOoB,EAAMV,eAVoCW,OCsBhDI,MA7Cf,WACE,MAA4B3B,mBAAS,IAArC,mBAAOgB,EAAP,KAAeY,EAAf,KA+BA,OACE,gCACE,cAAC,EAAD,CAAYvB,SA/BK,SAACwB,GACpB,GAAKA,EAAKjB,OAAQ,QAAQkB,KAAKD,EAAKjB,MAApC,CAGA,IAAMmB,EAAS,CAAIF,GAAJ,mBAAab,IAC5BY,EAAUG,OA2BR,cAAC,EAAD,CACEZ,gBA1BgB,SAACX,GACrB,IAAIwB,EAAiBhB,EAAOK,KAAI,SAACC,GAI/B,OAHIA,EAAMd,KAAOA,IACfc,EAAMG,cAAgBH,EAAMG,cAEvBH,KAETM,EAAUI,IAoBNhB,OAAQA,EACRC,cAXgB,SAACT,GACrB,IAAMyB,EAAoB,YAAIjB,GAAQkB,QAAO,SAACZ,GAAD,OAAWA,EAAMd,KAAOA,KACrEoB,EAAUK,IAUNf,oBApBsB,SAACiB,EAASC,GAC/BA,EAAWxB,OAAQ,QAAQkB,KAAKM,EAAWxB,OAGhDgB,GAAU,SAACS,GAAD,OACRA,EAAKhB,KAAI,SAACC,GAAD,OAAYA,EAAMd,GAAK2B,EAAUC,EAAad,eChB9CgB,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,OCFNe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fa8d4837.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Formulario(props) {\n  const [input, setInput] = useState(props.editar ? props.editar.value : \"\");\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n    setInput(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input onChange={handleChange} value={input} />\n      <button>AGREGAR</button>\n    </form>\n  );\n}\n\nexport default Formulario;\n","import React, { useState } from \"react\";\nimport { TiDeleteOutline } from \"react-icons/ti\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport Formulario from \"./Formulario\";\n\nfunction Tareas({\n  tareas,\n  eliminarTarea,\n  setActualizadoTarea,\n  tareaCompletada,\n}) {\n  const [editar, setEditar] = useState({\n    id: null,\n    value: \"\",\n  });\n  const actualizarTarea = (value) => {\n    setActualizadoTarea(editar.id, value);\n    setEditar({\n      id: null,\n      value: \"\",\n    });\n  };\n  if (editar.id) {\n    return <Formulario editar={editar} onSubmit={actualizarTarea} />;\n  }\n  return tareas.map((tarea, index) => (\n    <div className={tarea.estaCompleta ? \"completa\" : \"\"} key={index}>\n      <div key={tarea.id} onClick={() => tareaCompletada(tarea.id)}>\n        {tarea.text}\n      </div>\n      <div>\n        <TiDeleteOutline onClick={() => eliminarTarea(tarea.id)} />\n        <AiOutlineEdit\n          onClick={() =>\n            setEditar({\n              id: tarea.id,\n              value: tarea.text,\n            })\n          }\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default Tareas;\n","import React, { useState } from \"react\";\nimport Formulario from \"./Formulario\";\nimport Tareas from \"./Tareas\";\nfunction ListaTareas() {\n  const [tareas, setTareas] = useState([]);\n\n  const agregarTarea = (info) => {\n    if (!info.text || /^\\s*$/.test(info.text)) {\n      return;\n    }\n    const LasTareas = [info, ...tareas];\n    setTareas(LasTareas);\n  };\n  const tareaCompleta = (id) => {\n    let actualizarComp = tareas.map((tarea) => {\n      if (tarea.id === id) {\n        tarea.estaCompleta = !tarea.estaCompleta;\n      }\n      return tarea;\n    });\n    setTareas(actualizarComp);\n  };\n  const setActualizadoTarea = (tareaId, nuevoValor) => {\n    if (!nuevoValor.text || /^\\s*$/.test(nuevoValor.text)) {\n      return;\n    }\n    setTareas((prev) =>\n      prev.map((tarea) => (tarea.id = tareaId ? nuevoValor : tarea))\n    );\n  };\n  const eliminarTarea = (id) => {\n    const tareasActualizado = [...tareas].filter((tarea) => tarea.id !== id);\n    setTareas(tareasActualizado);\n  };\n\n  return (\n    <div>\n      <Formulario onSubmit={agregarTarea} />\n      <Tareas\n        tareaCompletada={tareaCompleta}\n        tareas={tareas}\n        eliminarTarea={eliminarTarea}\n        setActualizadoTarea={setActualizadoTarea}\n      />\n    </div>\n  );\n}\n\nexport default ListaTareas;\n","import \"./App.css\";\nimport ListaTareas from \"./components/ListaTareas\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ListaTareas />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}